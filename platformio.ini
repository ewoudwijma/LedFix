;    @title     StarBase
;    @file      platformio.ini
;    @date      20241219
;    @repo      https://github.com/ewowi/StarBase, submit changes to this file as PRs to ewowi/StarBase
;    @Authors   https://github.com/ewowi/StarBase/commits/main
;    @Copyright © 2024 Github StarBase Commit Authors
;    @license   GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007
;    @license   For non GPL-v3 usage, commercial licenses must be purchased. Contact moonmodules@icloud.com


; ESPAsyncWebServer ESPHome version
[ESPAsyncWebServer]
build_flags = 
  -D CONFIG_ASYNC_TCP_USE_WDT=0 ;why? tbd: experiment without
  -D WS_MAX_QUEUED_MESSAGES=64
  -D CONFIG_ASYNC_TCP_RUNNING_CORE=1 ;tbd experiment without
  ;-D CONFIG_ASYNC_TCP_TASK_STACK_SIZE ; 8192*2 here as default !!!
lib_deps =
  https://github.com/MoonModules/ESPAsyncWebServer.git @ 3.2.2 ; + queueLen(gth) (see https://github.com/esphome/ESPAsyncWebServer/pull/38)
  ; https://github.com/mathieucarbou/ESPAsyncWebServer.git @ 3.3.5 ; WIP...

; ESPAsyncWebServer AirCoookie v2.0.7 version (2.2.1 is latest)
; [ESPAsyncWebServer]
; build_flags = 
;   -D CONFIG_ASYNC_TCP_USE_WDT=0 ;why? tbd: experiment without
;   ; -D WS_MAX_QUEUED_MESSAGES=64 ;not supported to set here in AirCoookie version
;   -D CONFIG_ASYNC_TCP_STACK_SIZE=CONFIG_ASYNC_TCP_TASK_STACK_SIZE ; ESPHome uses CONFIG_ASYNC_TCP_STACK_SIZE (used in SysModSystem)
; lib_deps =
;   ; https://github.com/lost-hope/ESPAsyncWebServer.git#master ;aircoookie + artifx on <ip>/edit
;   ; https://github.com/ewowi/ESPAsyncWebServer.git ;me-no-dev + 64 + queueLength - alternative
;   https://github.com/pbolduc/AsyncTCP.git @ 1.2.0 ; WLEDMM this must be first in the list, otherwise Aircoookie/ESPAsyncWebServer pulls in an older version of AsyncTCP !!
;   https://github.com/ewoudwijma/ESPAsyncWebServer.git#v2.0.7 ;aircoookie + getClients + 64
;   ; https://github.com/ewoudwijma/ESPAsyncWebServer.git#v2.2.1 ;crashes on ws refererence in sendDataWs !!

; see also:
; https://github.com/esphome/ESPAsyncWebServer/issues/34 ; Decide which ESPAsyncWebServer fork should be canonical?
; https://github.com/mathieucarbou/ESPAsyncWebServer/discussions/38 ; Should we try to establish this as the de facto successor fork of ESPAsyncWebServer?
; https://github.com/mathieucarbou/ESPAsyncWebServer ; Important recommendations

;Work in progress - not compiling yet
[PsychicHttp]
build_flags = 
  -D STARBASE_USE_Psychic
lib_deps =
  ; hoeken/PsychicHttp
  https://github.com/hoeken/PsychicHttp


[STARBASE_USERMOD_E131]
build_flags = 
  -D STARBASE_USERMOD_E131
lib_deps =
  https://github.com/forkineye/ESPAsyncE131.git#v1.0.3
  ; https://github.com/forkineye/ESPAsyncE131.git#9655aae7 ; no tag #v1.0.3 as commits after these tags exists

[STARBASE_USERMOD_HA]
build_flags = 
  -D STARBASE_USERMOD_HA
  -D ARDUINOHA_DEBUG
lib_deps =
    https://github.com/dawidchyrzynski/arduino-home-assistant.git#2.1.0

[STARBASE_USERMOD_MPU6050]
build_flags = 
  -D STARBASE_USERMOD_MPU6050
lib_deps =
  ElectronicCats/MPU6050 @ 1.3.0

[STARBASE_USERMOD_MIDI]
build_flags = 
  -D STARBASE_USERMOD_MIDI
lib_deps =
  ; https://github.com/marcel-licence/esp32_usb_midi
  ; https://github.com/felis/USB_Host_Shield_2.0

;asmParser © https://github.com/hpwit/ASMParser
[STARBASE_USERMOD_LIVE]
build_flags = 
  -D STARBASE_USERMOD_LIVE
  -D EXTPRINTF=ppf ;redirect Live Script prints to StarBase print
lib_deps =
  https://github.com/ewowi/ESPLiveScript.git#3f57cc2 ; v3.1 ;ewowi repo adds some proposed PR's and makes sure we don't have unexpected updates

[STARBASE]
build_flags = 
  -D APP=StarBase
  -D PIOENV=$PIOENV
  -D VERSION=24121908 ; Date and time (GMT!), update at every commit!!
  -D LFS_THREADSAFE            ; enables use of semaphores in LittleFS driver
  -D STARBASE_DEVMODE
  -mtext-section-literals ;otherwise [UserModLive::setup()]+0xa17): dangerous relocation: l32r: literal target out of range (try using text-section-literals)
                          ;for StarLight, first only for s2, now for all due to something in UserModLive.Setup...
  ${ESPAsyncWebServer.build_flags} ;alternatively PsychicHttp
  -D EMBED_WWW ;embed the svelte web interface in the firmware
  ;optional:
  -D STARBASE_ETHERNET ; +41.876 bytes (2.2%)
  ${STARBASE_USERMOD_E131.build_flags} ;+11.416 bytes 0.6%
  ${STARBASE_USERMOD_MPU6050.build_flags} ;+35.308 bytes 1.8%
  ; ${STARBASE_USERMOD_MIDI.build_flags} ;+5%...
  ; ${STARBASE_USERMOD_HA.build_flags}
  ${STARBASE_USERMOD_LIVE.build_flags} ;+222.204 bytes 11.7%
lib_deps = 
  ${ESPAsyncWebServer.lib_deps} ;alternatively PsychicHttp
  https://github.com/bblanchon/ArduinoJson.git @ 7.2.1 ;force latest
  ; https://github.com/Jason2866/ESP32_Show_Info.git
  ;optional:
  ${STARBASE_USERMOD_E131.lib_deps}
  ${STARBASE_USERMOD_MPU6050.lib_deps}
  ; ${STARBASE_USERMOD_MIDI.lib_deps}
  ; ${STARBASE_USERMOD_HA.lib_deps}
  ${STARBASE_USERMOD_LIVE.lib_deps}




[Speed_Flags]
build_flags =
  -O2 ; optimize for performance instead of size
  ;-ffast-math ; gives a few  (2-5) percent speedup on ESP32-S3, but causes slight slowdown on classic ESP32
  -mtarget-align -free -fipa-pta ; these are very useful, too
  -fno-jump-tables -fno-tree-switch-conversion                 ; needed
  -freorder-blocks -Wwrite-strings -fstrict-volatile-bitfields ; needed
build_unflags =
  -Os ; to disable standard optimization for size

[env]
framework = arduino
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
board_build.partitions = boards/WLED_ESP32_4MB_256KB_FS.csv   ; 1.8MB firmware, 256KB filesystem (esptool erase_flash needed when changing from "standard WLED" partitions)
board_build.filesystem = littlefs
board_build.f_flash = 80000000L ; use full 80MHz speed for flash (default = 40MHz) - this is a fixed override from the board specs applicable for all env!!!
board_build.flash_mode = dio ; (dio = dual i/o; more compatible than qio = quad i/o)
build_unflags = 
  ${Speed_Flags.build_unflags}
build_flags = 
  ${Speed_Flags.build_flags}
  ${STARBASE.build_flags}
lib_deps =
  ${STARBASE.lib_deps}
extra_scripts =
  pre:tools/webbundle.py
  pre:data/svelte/build_interface.py
  post:tools/post_build.py


[env:esp32dev]
board = esp32dev ;https://github.com/platformio/platform-espressif32/blob/develop/boards/esp32dev.json
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 1500000
build_flags = 
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")
  -D STARBASE_BOOT_BUTTON_PIN=0 ; boot pin on the esp32 board
lib_deps = 
  ${env.lib_deps}

; https://github.com/platformio/platform-espressif32/issues/1360
; https://community.platformio.org/t/support-esp32-wrover-module/17717
; note: flashing to new board goes wrong, try first without ICVD then with and without etc until it works (witchcraft)
; Guru Meditation Error: Core  0 panic'ed (Cache disabled but cached memory region accessed). 
[env:esp-wrover-kit]
board = esp-wrover-kit ; esp-wrover-kit ;https://github.com/platformio/platform-espressif32/blob/develop/boards/esp-wrover-kit.json
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 1500000
build_flags = 
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")
  -DBOARD_HAS_PSRAM 
  -mfix-esp32-psram-cache-issue
  -D STARBASE_BOOT_BUTTON_PIN=0 ; boot pin on the esp32 board, works!
lib_deps = 
  ${env.lib_deps}


[env:pico32]
board = pico32 ;https://github.com/platformio/platform-espressif32/blob/develop/boards/pico32.json
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 230400  ; reduced speed, as a manually attached serial-to-USB Module is needed on most pico boards (flimsy cables -> not reliable connection)
build_flags = 
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")
  -D STARBASE_BOOT_BUTTON_PIN=0 ; boot pin on the esp32 board, check
lib_deps = 
  ${env.lib_deps}


[env:lolin_d32]
board = lolin_d32 ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_d32.json (no differences with esp32dev)
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 1500000
build_flags = 
  ${env.build_flags}
  ; -DARDUINO_ARCH_ESP32 ; no proof of necessity yet...
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")
  ; -D STARBASE_BOOT_BUTTON_PIN=0 ; no boot pin found on the board
lib_deps = 
  ${env.lib_deps}



[env:lolin_s2_mini]
board = lolin_s2_mini ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_s2_mini.json
; platform = espressif32@5.3.0 ; WLED default framework version
platform = espressif32@6.3.0    ; this one behaves better for debugging 6.5.0 is latest
upload_speed = 256000
build_flags = 
  ${env.build_flags}
  ; -DARDUINO_ARCH_ESP32 ; no proof of necessity yet...
  -D CONFIG_IDF_TARGET_ESP32S2=1
  -D ARDUINO_USB_CDC_ON_BOOT=1 -D ARDUINO_USB_DFU_ON_BOOT=1 -D ARDUINO_USB_MSC_ON_BOOT=0 ; for debugging over USB
  ; -DARDUINO_USB_CDC_ON_BOOT=0 -DARDUINO_USB_DFU_ON_BOOT=1 -DARDUINO_USB_MSC_ON_BOOT=0 ; with serial-to-USB moddule (use in case your board hangs without USB connection)
  -D ARDUINO_USB_MODE=0        ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (mandatory on -S2)
  ; -D DEBUG=1 -D CORE_DEBUG_LEVEL=1 -D ARDUINOJSON_DEBUG=1 ; for more debug output
  -D STARBASE_LOLIN_WIFI_FIX  ; workaround for LOLIN C3/S2/S3 wifi instability. https://www.wemos.cc/en/latest/c3/c3_mini_1_0_0.html#about-wifi
  -D STARBASE_BOOT_BUTTON_PIN=0 ;pin 0 works
lib_deps = 
  ${env.lib_deps}

  ; using framework-arduinoespressif32 @ 3.20009.0 (2.0.9)

; attention! : manual action needed to select CLedDriver
; uncomment last 4 lines in the env description
; comment the following lines in the CLD-S3 repo (workaround), otherwise compile error:
; #include "hal/lcd_ll.h"
; #include "soc/gdma_reg.h"

; for Waveshare ESP32-S3 Mini/Zero https://www.waveshare.com/esp32-s3-zero.htm
; --> 4MB Flash, has PSRAM, memory type "qio_qspi", USB-CDC only
[env:lolin_s3_mini]
platform = espressif32@6.3.0    ; this one behaves better for debugging 6.5.0 is latest
board = lolin_s3_mini ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_s3_mini.json
build_flags =
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32S3=1
  -D ARDUINO_USB_CDC_ON_BOOT=1 -D ARDUINO_USB_MODE=1 -D ARDUINO_USB_DFU_ON_BOOT=0 -D ARDUINO_USB_MSC_ON_BOOT=0 ; for debugging over USB
  ; -D DEBUG=1 -D CORE_DEBUG_LEVEL=1 -D ARDUINOJSON_DEBUG=1 ; for more debug output
  ; -DSTARBASE_LOLIN_WIFI_FIX  ; I don't trust the tiny ceramic antenna - use workaround for LOLIN C3/S2/S3 wifi instability. https://www.wemos.cc/en/latest/c3/c3_mini_1_0_0.html#about-wifi
  ; -D STARBASE_BOOT_BUTTON_PIN=0 ; boot pin on the esp32 board, check
lib_deps = 
  ${env.lib_deps}

; check: https://docs.espressif.com/projects/esp-idf/en/stable/esp32s3/api-reference/peripherals/temp_sensor.html





; RAM:   [==        ]  15.6% (used 51124 bytes from 327680 bytes)
; Flash: [=======   ]  68.1% (used 892033 bytes from 1310720 bytes)
; RAM:   [==        ]  24.5% (used 80240 bytes from 327680 bytes)
; Flash: [========= ]  92.4% (used 1210894 bytes from 1310720 bytes)
; after WLED_ESP32_4MB_256KB_FS:
; RAM:   [==        ]  24.5% (used 80240 bytes from 327680 bytes)
; Flash: [======    ]  63.7% (used 1210894 bytes from 1900544 bytes)
; 20240128
; RAM:   [==        ]  16.8% (used 54916 bytes from 327680 bytes)
; Flash: [=======   ]  68.6% (used 1304529 bytes from 1900544 bytes)



; https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html
; https://github.com/platformio/platform-espressif32/blob/develop/boards/esp32-s3-devkitc-1.json
[env:esp32-s3-devkitc-1-n16r8v]
platform = espressif32@6.5.0 ;default is Espressif 32 (6.5.0)
                       ;  platform = espressif32@ ~6.3.2 ; WLEDMM:
                       ;  platform = platformio/espressif32@^6.7.0 ;TroyHacks: 
; platform_packages    ;default is framework-arduinoespressif32 @ 3.20014.231204 (2.0.14) 
                       ; WLEDMM: platformio/framework-arduinoespressif32 @ 3.20009.0    ; select arduino-esp32 v2.0.9 (arduino-esp32 2.0.10 thru 2.0.14 are buggy so avoid them)
                       ; TroyHacks: platformio/framework-arduinoespressif32@3.20014.231204
                       ;            ;toolchain-riscv32-esp@~12.2
                       ;            ;toolchain-xtensa-esp32s3@~12.2

                      ; TroyHacks homebrew, try soon
                      ;  platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/troyhacks/arduino-esp32.git#release/v2.x @ 2.0.17+sha.77dea29                                
                      ;   toolchain-riscv32-esp @ ~12.2
                      ;   toolchain-xtensa-esp32s3 @ ~12.2
                      ;   board_build.arduino.upstream_packages = no
board = esp32-s3-devkitc-1-n16r8v ;found in boards folder
board_build.partitions = boards/WLED_ESP32_16MB_9MB_FS.csv
build_flags =
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32S3=1
  -D STARBASE_LOLIN_WIFI_FIX  ; shouldn't be necessary, but otherwise WiFi issues on my board
  -D STARBASE_BOOT_BUTTON_PIN=0 ; boot pin on the esp32 board
lib_deps = 
  ${env.lib_deps}

; RAM:   [==        ]  18.7% (used 61404 bytes from 327680 bytes)
; Flash: [=====     ]  48.7% (used 1530457 bytes from 3145728 bytes)






; [env:lolin_c3_mini]
; board = lolin_c3_mini ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_c3_mini.json
; ; platform = espressif32@5.3.0 ; WLED default framework version
; platform = espressif32@6.3.0    ; this one behaves better for debugging 6.5.0 is latest
; upload_speed = 256000
; build_unflags = 
;   ${env.build_unflags}
;   -mtarget-align
; build_flags = 
;   ${env.build_flags}
;   ; -DARDUINO_ARCH_ESP32 ; no proof of necessity yet...
;   ; -DARDUINO_ARCH_ESP32C3 ; no proof of necessity yet...
;   -D CONFIG_IDF_TARGET_ESP32C3=1
;   -D ARDUINO_USB_CDC_ON_BOOT=1   ; for debugging over USB
;   ; -DARDUINO_USB_CDC_ON_BOOT=0 ; with serial-to-USB moddule (use in case your board hangs without USB connection)
;   -D ARDUINO_USB_MODE=1        ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (mandatory on -C3)
;   -D STARBASE_LOLIN_WIFI_FIX             ; activate workaround for LOLIN C3/S2/S3 wifi instability. https://www.wemos.cc/en/latest/c3/c3_mini_1_0_0.html#about-wifi
;   ; -D DEBUG=1 -D CORE_DEBUG_LEVEL=1 -D ARDUINOJSON_DEBUG=1 ; for more debug output
  
; RAM:   [=         ]  14.3% (used 46732 bytes from 327680 bytes)
; Flash: [=======   ]  74.4% (used 1414876 bytes from 1900544 bytes)






; Compiler warnings E131:

; In file included from .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.c:7:
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:50:10: warning: #warning "This library only fully supports AVR and ESP8266 Boards." [-Wcpp]
;          #warning "This library only fully supports AVR and ESP8266 Boards."
;           ^~~~~~~
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:51:10: warning: #warning "Operations on the buffer in ISRs are not safe!" [-Wcpp]
;          #warning "Operations on the buffer in ISRs are not safe!"
; In file included from .pio/libdeps/esp32dev/ESPAsyncE131/ESPAsyncE131.h:37,
;                  from .pio/libdeps/esp32dev/ESPAsyncE131/ESPAsyncE131.cpp:20:
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:50:10: warning: #warning "This library only fully supports AVR and ESP8266 Boards." [-Wcpp]
;          #warning "This library only fully supports AVR and ESP8266 Boards."
;           ^~~~~~~
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:51:10: warning: #warning "Operations on the buffer in ISRs are not safe!" [-Wcpp]
;          #warning "Operations on the buffer in ISRs are not safe!"
;           ^~~~~~~



; Compiler warnings HA:

; In file included from .pio/libdeps/esp32dev/home-assistant-integration/src/device-types/HAFan.h:5,
;                  from .pio/libdeps/esp32dev/home-assistant-integration/src/ArduinoHA.h:12,
;                  from src/User/UserModHA.h:12,
;                  from src/main.cpp:31:
; .pio/libdeps/esp32dev/home-assistant-integration/src/device-types/../utils/HANumeric.h:232:18: warning: class 'HANumeric' is implicitly friends with itself
;      friend class HANumeric;





;AsyncJson.h


; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:86:25: warning: 'DynamicJsonDocument' is deprecated: use JsonDocument instead [-Wdeprecated-declarations]
;      DynamicJsonDocument _jsonBuffer;
;                          ^~~~~~~~~~~
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:53,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/compatibility.hpp:125:58: note: declared here
;  class ARDUINOJSON_DEPRECATED("use JsonDocument instead") DynamicJsonDocument
;                                                           ^~~~~~~~~~~~~~~~~~~
; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h: In constructor 'AsyncJsonResponse::AsyncJsonResponse(bool, size_t)':
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:108:47: warning: 'ArduinoJson::V703PB2::JsonArray ArduinoJson::V703PB2::JsonDocument::createNestedArray()' is deprecated: use add<JsonArray>() instead [-Wdeprecated-declarations]
;          _root = _jsonBuffer.createNestedArray();
;                                                ^
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:33,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/Document/JsonDocument.hpp:298:13: note: declared here
;    JsonArray createNestedArray() {
;              ^~~~~~~~~~~~~~~~~
; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:110:48: warning: 'ArduinoJson::V703PB2::JsonObject ArduinoJson::V703PB2::JsonDocument::createNestedObject()' is deprecated: use add<JsonObject>() instead [-Wdeprecated-declarations]
;          _root = _jsonBuffer.createNestedObject();
;                                                 ^
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:33,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/Document/JsonDocument.hpp:318:14: note: declared here
;    JsonObject createNestedObject() {
;               ^~~~~~~~~~~~~~~~~~
; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h: In member function 'virtual void AsyncCallbackJsonWebHandler::handleRequest(AsyncWebServerRequest*)':
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:218:39: warning: 'DynamicJsonDocument' is deprecated: use JsonDocument instead [-Wdeprecated-declarations]
;          DynamicJsonDocument jsonBuffer(this->maxJsonBufferSize);
;                                        ^
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:53,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/compatibility.hpp:125:58: note: declared here
;  class ARDUINOJSON_DEPRECATED("use JsonDocument instead") DynamicJsonDocument
;                                                           ^~~~~~~~~~~~~~~~~~~
